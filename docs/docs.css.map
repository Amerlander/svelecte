{
  "version": 3,
  "file": "docs.css",
  "sources": [
    "Docs.svelte",
    "Svelecte.svelte",
    "Control.svelte",
    "Dropdown.svelte",
    "Input.svelte",
    "Item.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Svelecte from './Svelecte/Svelecte.svelte';\n\n\tlet options = [\n\t\t{ value: 1, text: 'Hello' },\n\t\t{ value: 2, text: 'Bello' },\n\t];\n\n</script>\n\n<main>\n\t<Svelecte {options}></Svelecte>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 400px;\n\t\tmargin: 2rem auto;\n\t}\n</style>",
    "<script context=\"module\">\r\n  import rendererActions from './actions.js';\r\n  import Item from './components/Item.svelte';\r\n\r\n  const renderers = {\r\n    default: Item\r\n  };\r\n  // provide ability to add additional renderers\r\n  export function registerRenderer(name, component) { renderers[name] = component }\r\n  export const itemActions = rendererActions;\r\n</script>\r\n\r\n<script>\r\n  import { setContext, onDestroy, createEventDispatcher, tick } from 'svelte';\r\n  import { key, initStore } from './contextStore.js';\r\n  import { fetchRemote } from './utils';\r\n  import defaults from './settings.js';\r\n  import Control from './components/Control.svelte';\r\n  import Dropdown from './components/Dropdown.svelte';\r\n\r\n  export let name = null;\r\n  export let required = false;\r\n  export let multiple = defaults.multiple;\r\n  export let disabled = defaults.disabled;\r\n  export let creatable = defaults.creatable;\r\n  export let selectOnTab = defaults.selectOnTab;\r\n  export let valueField = defaults.valueField;\r\n  export let css = 'svelecte-control';\r\n  // export let labelField = defaults.labelField;  // TODO: implement custom sifter search options\r\n  export let searchMode = defaults.searchMode;\r\n  export let max = defaults.max;\r\n  export let renderer = defaults.renderer;\r\n  export let clearable = defaults.clearable;\r\n  export let searchable = defaults.searchable;\r\n  export let placeholder = 'Select';\r\n  export let fetch = null;\r\n  export let options = [];\r\n  /** ************************************ API */\r\n  export let selection = undefined;\r\n  export let value = undefined;\r\n  export const getSelection = () => JSON.parse(JSON.stringify(selection));\r\n  export const setSelection = selection => _selectByValues(selection);\r\n\r\n  // options are being updated\r\n  let prevOptions = undefined;\r\n  $: {\r\n    if (prevOptions !== options && _set) {\r\n      _set(options);\r\n      prevOptions = options;\r\n    }\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const storeSettings = {\r\n    multiple,\r\n    creatable,\r\n    searchMode,\r\n    max\r\n  };\r\n  multiple = name && !multiple ? name.endsWith('[]') : multiple;\r\n\r\n  /** ************************************ auto configuration */\r\n  $: {\r\n    placeholder = options.reduce((res, opt, i) => {\r\n      if (opt.value === '') {\r\n        res = opt.text;\r\n        options.splice(i, 1); // remove this option \r\n      }\r\n      return res;\r\n    }, placeholder);\r\n  }\r\n  $: {\r\n    storeSettings.multiple = multiple;\r\n    storeSettings.creatable = creatable;\r\n    storeSettings.searchMode = searchMode;\r\n    storeSettings.max = max;\r\n  }\r\n\r\n  /** ************************************ Context definition */\r\n  const { \r\n      hasFocus, hasDropdownOpened, inputValue, listMessage,\r\n      selectOption, deselectOption, clearSelection, \r\n      listLength, matchingOptions, flatMatching, currentListLength, selectedOptions, listIndexMap,\r\n      _set, _remote, isFetchingData\r\n  } = initStore(options, storeSettings, typeof fetch === 'string' ?  fetchRemote(fetch) : fetch);\r\n\r\n  setContext(key, {\r\n    hasFocus, hasDropdownOpened, inputValue, listMessage,\r\n    selectOption, deselectOption, clearSelection, \r\n    listLength, matchingOptions, flatMatching, currentListLength, selectedOptions, listIndexMap, isFetchingData\r\n  });\r\n\r\n  /** ************************************ component logic */\r\n  let refDropdown;\r\n  let refControl;\r\n  let ignoreHover = false;\r\n  let dropdownActiveIndex = !multiple && options.some(o => o.isSelected)\r\n    ? options.indexOf(options.filter(o => o.isSelected).shift())\r\n    : 0;\r\n  $: itemRenderer = typeof renderer === 'string' ? renderers[renderer] : renderer;\r\n  $: {\r\n    selection = multiple\r\n      ? $selectedOptions\r\n      : $selectedOptions.length ? $selectedOptions[0] : null;\r\n    value = multiple \r\n      ? $selectedOptions.map(opt => opt[valueField])\r\n      : $selectedOptions.length ? $selectedOptions[0][valueField] : null;\r\n  }\r\n\r\n  function emitChangeEvent() {\r\n    tick().then(() => {\r\n      dispatch('change', selection)\r\n    });\r\n  }\r\n\r\n  function _selectByValues(values) {\r\n    if (!Array.isArray(values)) values = [values];\r\n    if (values[0] && values[0] instanceof Object) values = values.map(opt => opt[valueField]);\r\n    clearSelection();\r\n    const newAddition = [];\r\n    $flatMatching.forEach(opt => {\r\n      if (values.includes(opt.value)) {\r\n        newAddition.push(opt);\r\n      }\r\n    });\r\n    newAddition.forEach(selectOption);\r\n  }\r\n\r\n  function onSelect(event, opt) {\r\n    opt = opt || event.detail;\r\n    if (disabled || opt.isDisabled) return;\r\n    selectOption(opt);\r\n    $inputValue = '';\r\n    if (!multiple) {\r\n      $hasDropdownOpened = false;\r\n    }\r\n    emitChangeEvent();\r\n  }\r\n\r\n  function onDeselect(event, opt) {\r\n    if (disabled) return;\r\n    opt = opt || event.detail;\r\n    if (opt) {\r\n      deselectOption(opt);\r\n    } else {  // apply for 'x' when clearable:true || ctrl+backspace || ctrl+delete\r\n      clearSelection();\r\n    }\r\n    tick().then(refControl.focusControl);\r\n    emitChangeEvent();\r\n  }\r\n\r\n  function onHover(event) {\r\n    if (ignoreHover) {\r\n      ignoreHover = false;\r\n      return;\r\n    }\r\n    dropdownActiveIndex = event.detail;\r\n  }\r\n\r\n  function onKeyDown(event) {\r\n    let nextVal;\r\n    let scrollParams = {};\r\n    const Tab = selectOnTab && $hasDropdownOpened && !event.shiftKey ? 'Tab' : 'No-tab';\r\n    switch (event.key) {\r\n      case 'PageDown':\r\n        dropdownActiveIndex = 0;\r\n      case 'ArrowUp': \r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        dropdownActiveIndex = dropdownActiveIndex == 0 \r\n          ? $currentListLength\r\n          : dropdownActiveIndex - 1;\r\n        tick().then(refDropdown.scrollIntoView);\r\n        ignoreHover = true;\r\n        break;\r\n      case 'PageUp':\r\n        dropdownActiveIndex = $currentListLength + 2;\r\n      case 'ArrowDown': \r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        dropdownActiveIndex = dropdownActiveIndex >= $currentListLength ? 0 : dropdownActiveIndex + 1;\r\n        tick().then(refDropdown.scrollIntoView);\r\n        ignoreHover = true;\r\n        break;\r\n      case 'Escape':\r\n        if (!$inputValue) {\r\n          $hasDropdownOpened = false;\r\n        }\r\n        $inputValue = '';\r\n        break;\r\n      case Tab:\r\n        $hasDropdownOpened = false;\r\n        event.preventDefault();\r\n      case 'Enter':\r\n        if (!$hasDropdownOpened) return;\r\n        let activeDropdownItem = $flatMatching[dropdownActiveIndex];\r\n        if (creatable && $inputValue) {\r\n          activeDropdownItem = !activeDropdownItem || event.ctrlKey \r\n            ? $inputValue\r\n            : activeDropdownItem\r\n        }\r\n        activeDropdownItem && onSelect(null, activeDropdownItem);\r\n        if ($flatMatching.length <= dropdownActiveIndex) {\r\n          dropdownActiveIndex = $currentListLength > 0 ? $currentListLength : 0;\r\n        }\r\n        event.preventDefault(); // prevent form submit\r\n        break;\r\n      case ' ':\r\n        if (!$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case 'Backspace':\r\n      case 'Delete':\r\n        if ($inputValue === '' && $selectedOptions.length) {\r\n          event.ctrlKey ? onDeselect({}) : onDeselect(null, $selectedOptions.pop());\r\n        }\r\n      default:\r\n        if (!event.ctrlKey && event.key !== 'Shift' && !$hasDropdownOpened) {\r\n          $hasDropdownOpened = true;\r\n        }\r\n        if (!multiple && $selectedOptions.length && event.key !== 'Tab') event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onDestroy(currentListLength.subscribe(val => {\r\n    if (val <= dropdownActiveIndex) dropdownActiveIndex = val;\r\n    if (dropdownActiveIndex < 0) dropdownActiveIndex = 0;\r\n    tick().then(() => refDropdown && refDropdown.scrollIntoView({}));\r\n  }));\r\n</script>\r\n\r\n<div class={`svelecte ${css}`} class:is-disabled={disabled}>\r\n  {#if name}\r\n  <select name={name} {multiple} class=\"is-hidden\" tabindex=\"-1\" {required} {disabled}>\r\n    {#each $selectedOptions as opt}\r\n    <option value={opt.value} selected>{opt.text}</option>\r\n    {/each}\r\n  </select>\r\n  {/if}\r\n  <Control bind:this={refControl} renderer={itemRenderer}\r\n    {disabled} {clearable} {searchable} {placeholder} {multiple}\r\n    on:deselect={onDeselect}\r\n    on:keydown={onKeyDown}\r\n  >\r\n    <div slot=\"icon\" class=\"icon-slot\"><slot name=\"icon\"></slot></div>\r\n  </Control>\r\n  <Dropdown bind:this={refDropdown} renderer={itemRenderer} {creatable} \r\n    maxReached={max && max === $selectedOptions.length}\r\n    dropdownIndex={dropdownActiveIndex}\r\n    on:select={onSelect} \r\n    on:hover={onHover}\r\n  ></Dropdown>\r\n</div>\r\n\r\n<style>\r\n.svelecte { position: relative; }\r\n.svelecte.is-disabled { pointer-events: none; }\r\n.icon-slot { display: flex; }\r\n.is-hidden { display: none; visibility: hidden; }\r\n</style>",
    "<script>\r\n  import { getContext, createEventDispatcher, tick } from 'svelte';\r\n  import { key } from './../contextStore.js';\r\n  import Input from './Input.svelte';\r\n\r\n  export let clearable;\r\n  export let searchable;\r\n  export let renderer;\r\n  export let disabled;\r\n  export let placeholder;\r\n  export let multiple;\r\n  export function focusControl(event) {\r\n    if (disabled) return;\r\n    if (!event) {\r\n      !$hasFocus && refInput.focus();\r\n      $hasDropdownOpened = true;\r\n      return;\r\n    }\r\n    if (!$hasFocus) {\r\n      refInput.focus();\r\n    } else {\r\n      $hasDropdownOpened = !$hasDropdownOpened;\r\n    }\r\n  }\r\n\r\n  /** ************************************ context */\r\n  const dispatch = createEventDispatcher();\r\n  const { inputValue, hasFocus, hasDropdownOpened, selectedOptions } = getContext(key);\r\n\r\n  let refInput = undefined;\r\n  $: showSelection = multiple ? true : !$inputValue && $selectedOptions.length;\r\n\r\n  function onFocus() {\r\n    $hasFocus = true; \r\n    $hasDropdownOpened = true;\r\n  }\r\n\r\n  function onBlur() {\r\n    $hasFocus = false;\r\n    $hasDropdownOpened = false;\r\n    $inputValue = ''; // reset\r\n  }\r\n</script>\r\n\r\n<div class=\"control\" class:is-active={$hasFocus} class:is-disabled={disabled}\r\n  on:mousedown|preventDefault\r\n  on:click|preventDefault={focusControl}\r\n>\r\n  <slot name=\"icon\"></slot>\r\n  <!-- selection & input -->\r\n  <div class=\"content\" class:has-multiSelection={multiple}>\r\n    {#if $selectedOptions.length }\r\n      {#each $selectedOptions as opt}\r\n      <svelte:component this={renderer} item={opt} isSelected={true} on:deselect isMultiple={multiple}></svelte:component>\r\n      {/each}\r\n    {/if}\r\n    <!-- input -->\r\n    <Input {disabled} {searchable} {placeholder}\r\n      bind:this={refInput}\r\n      on:focus={onFocus}\r\n      on:blur={onBlur}\r\n      on:keydown\r\n    ></Input>\r\n  </div>\r\n  <!-- buttons, indicators -->\r\n  <div class=\"indicator\">\r\n    {#if clearable && $selectedOptions.length && !disabled}\r\n    <div aria-hidden=\"true\" class=\"indicator-container close-icon\"\r\n      on:mousedown|preventDefault\r\n      on:click={() => dispatch('deselect')}\r\n    >\r\n      <svg class=\"indicator-icon\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path></svg>\r\n    </div>\r\n    {/if}\r\n    {#if clearable}\r\n    <span class=\"indicator-separator\"></span>\r\n    {/if}\r\n    <div aria-hidden=\"true\" class=\"indicator-container\" on:mousedown|preventDefault>\r\n      <svg width=\"20\" class=\"indicator-icon\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\">\r\n        <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\r\n      </svg>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n/** global default styles for wrapper div (*/\r\n:global(.svelecte-control) .control             { border: 1px solid #ccc; border-radius: 4px; min-height: 38px; }\r\n:global(.svelecte-control) .control.is-active   { border: 1px solid #555; }\r\n.control.is-disabled {\r\n  background-color: rgb(242, 242, 242);\r\n  border-color: rgb(230, 230, 230);\r\n  cursor: default;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  outline: currentcolor none 0px !important;\r\n  position: relative;\r\n  transition: all 100ms ease 0s;\r\n}\r\n.control {\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n.content {\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1 1 0%;\r\n  flex-wrap: wrap;\r\n  padding: 0 0 0 6px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n}\r\n.indicator {\r\n  align-items: center;\r\n  align-self: stretch;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-container {\r\n  color: rgb(204, 204, 204);\r\n  display: flex;\r\n  padding: 8px;\r\n  transition: color 150ms ease 0s;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-container:hover { color: rgb(153, 153, 153); }\r\n.indicator-separator {\r\n  align-self: stretch;\r\n  background-color: rgb(204, 204, 204);\r\n  margin-bottom: 8px;\r\n  margin-top: 8px;\r\n  width: 1px;\r\n  box-sizing: border-box;\r\n}\r\n.indicator-icon {\r\n  display: inline-block;\r\n  fill: currentcolor;\r\n  line-height: 1;\r\n  stroke: currentcolor;\r\n  stroke-width: 0px;\r\n}\r\n</style>",
    "<script>\r\n  import { getContext, createEventDispatcher, onDestroy, onMount, tick } from 'svelte';\r\n  import { key } from './../contextStore.js';\r\n  import { isOutOfViewport} from './../utils';\r\n\r\n  export let creatable;\r\n  export let maxReached = false;\r\n  export let dropdownIndex = 0;\r\n  export let renderer;\r\n\r\n  export function scrollIntoView(params) {\r\n    const focusedEl = container.querySelector(`[data-pos=\"${dropdownIndex}\"]`);\r\n    if (!focusedEl) return;\r\n    const focusedRect = focusedEl.getBoundingClientRect();\r\n    const menuRect = scrollContainer.getBoundingClientRect();\r\n    const overScroll = focusedEl.offsetHeight / 3;\r\n    switch (true) {\r\n      case focusedEl.offsetTop < scrollContainer.scrollTop:\r\n        scrollContainer.scrollTop = focusedEl.offsetTop - overScroll;\r\n        break;\r\n      case focusedEl.offsetTop  + focusedRect.height > scrollContainer.scrollTop + menuRect.height:\r\n        scrollContainer.scrollTop = focusedEl.offsetTop  + focusedRect.height - scrollContainer.offsetHeight + overScroll;\r\n        break;\r\n    }\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const {  // getContext\r\n    inputValue, hasDropdownOpened, listLength, currentListLength, listMessage,\r\n    isFetchingData, matchingOptions, flatMatching, selectedOptions, listIndexMap\r\n  } = getContext(key);\r\n\r\n  let container;\r\n  let scrollContainer;\r\n  let scrollPos = null;\r\n  let isMounted = false;\r\n  let hasEmptyList = false;\r\n  let remoteSearch = false;\r\n\r\n  $: {\r\n    hasEmptyList = $matchingOptions.length < 1 && (creatable \r\n      ? !$inputValue\r\n      : true\r\n    );\r\n  }\r\n\r\n  const positionDropdown = val => {\r\n    const outVp = isOutOfViewport(scrollContainer);\r\n    if (outVp.bottom && !outVp.top) {\r\n      scrollContainer.style.bottom = (scrollContainer.parentElement.clientHeight + 1) + 'px';\r\n      // TODO: debounce ....\r\n    } else if (!val || outVp.top) {\r\n      scrollContainer.style.bottom = '';\r\n    }\r\n  }\r\n  let dropdownStateSubscription; \r\n  /** ************************************ lifecycle */\r\n  onMount(() => {\r\n    isMounted = true;\r\n    /** ************************************ flawless UX related tweak */\r\n    dropdownStateSubscription = hasDropdownOpened.subscribe(val => {\r\n      tick().then(() => positionDropdown(val));\r\n      // bind/unbind scroll listener\r\n      document[val ? 'addEventListener' : 'removeEventListener']('scroll', () => positionDropdown(val));\r\n    });\r\n  });\r\n  onDestroy(() => dropdownStateSubscription());\r\n</script>\r\n\r\n<div class=\"dropdown\" class:is-loading={$isFetchingData} aria-expanded={$hasDropdownOpened} \r\n  bind:this={scrollContainer}\r\n  on:mousedown|preventDefault\r\n>\r\n  <div class=\"dropdown-content\" bind:this={container} class:max-reached={maxReached}>\r\n  {#if $listLength}\r\n    {#each $matchingOptions as opt, i}\r\n      {#if opt.options && Array.isArray(opt.options)}\r\n        <div class=\"optgroup-header\" on:mousedown|preventDefault>\r\n          <slot name=\"dropdown-group-header\"><b>{opt.label}</b></slot>\r\n        </div>\r\n        {#each opt.options as groupOpt, j}\r\n        <div data-pos={$listIndexMap[i][j]} class=\"optgroup-item\" \r\n          class:active={$listIndexMap[i][j] === dropdownIndex}\r\n        >\r\n          <svelte:component this={renderer}\r\n            isDisabled={opt.isDisabled || groupOpt.isDisabled}\r\n            index={$listIndexMap[i][j]}\r\n            item={groupOpt}\r\n            on:hover\r\n            on:select>\r\n          </svelte:component>\r\n        </div>\r\n        {/each}\r\n      {:else}\r\n      <div data-pos={$listIndexMap[i]}\r\n        class:active={$listIndexMap[i] === dropdownIndex}\r\n      >\r\n        <svelte:component this={renderer}\r\n          index={$listIndexMap[i]}\r\n          isDisabled={opt.isDisabled}\r\n          item={opt}\r\n          on:hover\r\n          on:select>\r\n        </svelte:component>\r\n      </div>\r\n      {/if}\r\n    {/each}\r\n  {/if}\r\n    {#if $inputValue && creatable}\r\n    <div class=\"creatable-row\" on:click={dispatch('select', $inputValue)} class:active={$currentListLength === dropdownIndex}>\r\n      <span>Create '{$inputValue}'</span>\r\n      {#if $currentListLength !== dropdownIndex}\r\n      <span class=\"shortcut\"><kbd>Ctrl</kbd>+<kbd>Enter</kbd></span>\r\n      {/if}\r\n    </div>\r\n    {/if}\r\n    {#if hasEmptyList && !$isFetchingData}\r\n    <div class=\"empty-list-row\">{$listMessage}</div>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n.dropdown {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  background-color: white;\r\n  width: 100%;\r\n  min-height: 40px;\r\n  padding: 4px;\r\n  display: none;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  border: 1px solid rgba(0,0,0,0.15);\r\n  border-radius: .25rem;\r\n  box-shadow: 0 6px 12px rgba(0,0,0,0.175);\r\n  z-index: 1;\r\n}\r\n.dropdown[aria-expanded=\"true\"] { display: block; }\r\n.dropdown-content.max-reached { opacity: 0.75; cursor: not-allowed; }\r\n\r\n.creatable-row {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 2px;\r\n  padding: 3px 3px 3px 6px;\r\n}\r\n.creatable-row:hover,\r\n.creatable-row:active,\r\n.creatable-row.active {\r\n    background-color: #F2F5F8;\r\n}\r\n\r\n.shortcut {\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n}\r\n.shortcut > kbd {\r\n    border: 1px solid #efefef;\r\n    border-radius: 4px;\r\n    padding: 0px 6px;\r\n    margin: -1px 0;\r\n    background-color: white;\r\n}\r\n\r\n.empty-list-row {\r\n  min-width: 0px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  padding: 3px 3px 3px 6px;\r\n  text-align: left;\r\n}\r\n\r\n.optgroup-header {\r\n  padding: 3px 3px 3px 6px;\r\n  font-weight: bold;\r\n}\r\n.optgroup-item {\r\n  margin-left: 0.5rem;\r\n}\r\n.is-loading:after {\r\n  animation: spinAround .5s infinite linear;\r\n  border: 3px solid #dbdbdb;\r\n  border-radius: 290486px;\r\n  border-right-color: transparent;\r\n  border-top-color: transparent;\r\n  content: \"\";\r\n  display: block;\r\n  height: 16px;\r\n  width: 16px;\r\n  left: calc(50% - (1em / 2));\r\n  top: calc(50% - (1em / 2));\r\n  position: absolute !important;\r\n  box-sizing: border-box;\r\n}\r\n.is-loading .dropdown-content {\r\n  filter: blur(4px);\r\n}\r\n@keyframes spinAround {\r\n  from {\r\n    transform: rotate(0deg)\r\n  }\r\n  to {\r\n    transform: rotate(359deg)\r\n  }\r\n}\r\n\r\n.fetch-remote + .dropdown-content {\r\n  filter: blur(2px);\r\n}\r\n</style>",
    "<script>\r\n  import { getContext, onDestroy, createEventDispatcher } from 'svelte';\r\n  import { key } from './../contextStore.js';\r\n\r\n  export const focus = () => inputRef.focus();\r\n  export let placeholder;\r\n  export let searchable;\r\n  export let disabled;\r\n\r\n  let inputRef = null;\r\n  let shadowWidth = 0;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const { inputValue, selectedOptions } = getContext(key);\r\n\r\n  $: placeholderText = $selectedOptions.length ? '' : placeholder;\r\n  $: shadowText = $inputValue || placeholder;\r\n  $: inputStyle = `width: ${shadowWidth + 19}px`;\r\n\r\n  function dispatchEvent(event) {\r\n    dispatch(event.type);\r\n  }\r\n</script>\r\n\r\n<!--<div class=\"inputRow\"> -->\r\n<input type=\"text\" class=\"inputBox\"\r\n  disabled={disabled}\r\n  readonly={!searchable}\r\n  style={inputStyle} placeholder={placeholderText}\r\n  bind:this={inputRef} \r\n  bind:value={$inputValue} \r\n  on:focus|stopPropagation={dispatchEvent} \r\n  on:blur|stopPropagation={dispatchEvent}\r\n  on:keydown\r\n>\r\n<div class=\"shadow-text\" bind:clientWidth={shadowWidth}>{shadowText}</div>\r\n<!--</div>-->\r\n\r\n<style>\r\n.inputBox {\r\n  box-sizing: content-box;\r\n  width: 19px;\r\n  background: rgba(0, 0, 0, 0) none repeat scroll 0px center;\r\n  border: 0px none;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  opacity: 1;\r\n  outline: currentcolor none 0px;\r\n  padding: 0px;\r\n  color: inherit;\r\n  margin: -2px 0 0;\r\n  height: 20px;\r\n}\r\n.inputBox:read-only { width: 100%; }\r\n.shadow-text {\r\n  visibility: hidden;\r\n  position: absolute; left: 100%;\r\n  z-index: -100;\r\n  min-width: 24px;\r\n  white-space: nowrap;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n</style>",
    "<script>\r\n  import itemActions from './../actions.js';\r\n\r\n  export let index = -1;\r\n  export let item = {};\r\n  export let isSelected = false;\r\n  export let isDisabled = false;\r\n  export let isMultiple = false;\r\n</script>\r\n\r\n<style>\r\n:global(.has-multiSelection .sv-item) {\r\n  background-color: #efefef;\r\n  margin: 2px 4px 2px 0;\r\n}\r\n:global(.has-multiSelection .sv-item-btn)  {\r\n  display: flex;\r\n}\r\n:global(.has-multiSelection .sv-item-content),\r\n:global(.dropdown-content .sv-item) {\r\n  padding: 3px 3px 3px 6px;\r\n}\r\n:global(.active .sv-item) {\r\n  background-color: #F2F5F8;\r\n}\r\n:global(.sv-item) {\r\n  display: flex;\r\n  min-width: 0px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  cursor: default;\r\n}\r\n:global(.sv-item.is-disabled) { opacity: 0.5; cursor: not-allowed; }\r\n\r\n:global(.sv-item-content) {\r\n  color: rgb(51, 51, 51);\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n}\r\n:global(.sv-item-btn) {\r\n  display: none;\r\n  position: relative;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n}\r\n:global(.sv-item-btn:hover) { background-color: #ddd; }\r\n</style>\r\n\r\n\r\n<div class=\"sv-item\"\r\n  class:is-disabled={isDisabled}\r\n  use:itemActions={{item, index}}\r\n  on:select\r\n  on:deselect\r\n  on:hover\r\n>\r\n  <div class=\"sv-item-content\">{item.text}</div>\r\n{#if isSelected && isMultiple}\r\n  <a href=\"#deselect\" class=\"sv-item-btn\" tabindex=\"-1\" data-action=\"deselect\">\r\n    <svg height=\"16\" width=\"16\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path></svg>\r\n  </a>\r\n{/if}\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}